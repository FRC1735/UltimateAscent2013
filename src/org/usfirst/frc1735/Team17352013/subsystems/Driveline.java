// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc1735.Team17352013.subsystems;
import org.usfirst.frc1735.Team17352013.RobotMap;
import org.usfirst.frc1735.Team17352013.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 *
 */
public class Driveline extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    AnalogChannel usSensor = RobotMap.drivelineusSensor;
    SpeedController leftCIMFront = RobotMap.drivelineLeftCIMFront;
    SpeedController leftCIMBack = RobotMap.drivelineLeftCIMBack;
    SpeedController rightCIMFront = RobotMap.drivelineRightCIMFront;
    SpeedController rightCIMBack = RobotMap.drivelineRightCIMBack;
    RobotDrive robotDrive = RobotMap.drivelineRobotDrive;
    Compressor compressor = RobotMap.drivelineCompressor;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    public Driveline()
    {
        super();
        robotDrive.setSafetyEnabled(false);
    }
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new DrivewithJoysticks());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void tank(Joystick left, Joystick right) {
        robotDrive.tankDrive(left, right);    
        System.out.println(usSensor.getAverageVoltage()/.0098/12);
    }
    
    public void tankNum(double left, double right) {
        robotDrive.tankDrive(left, right);
    }
    
    public void startCompressor() {
        compressor.start();
    }
}
